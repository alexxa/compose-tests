# This is a playbook to
#  - setup modularity development environment,
#  - build docker image within a given compose url,
#  - run a set of tests

- name:  Setup modularity development environment
  hosts: localhost
  connection: local
  become: yes
  become_method: sudo
  tasks:

    - name: update all packages
      package:
        name: "*"
        state: latest

    - name: install list of packages
      package:
        name: {{ item }}
        state: latest
        enablerepo: updates-testing
      with_items:
        - git
        - make
        - pkgwat
        - module-build-service
        - python2-modulemd
        - python2-pdc-client
        - mock-scm
        - docker
        - atomic

    - name: create docker group
      group:
        name: docker
        state: present

    - name: start docker
      service:
        name: docker
        state: started
        enaled: yes

    - name: chown docker_sock
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker

    - name: install mock packages
      package:
        name: "https://kojipkgs.fedoraproject.org//packages/mock/1.3.4/1.fc26/noarch/{{ item }}-1.3.4-1.fc26.noarch.rpm"
        state: present
      with_items:
        - mock
        - mock-lvm
        - mock-scm

    - name: install list of packages
      package:
        name: {{ item }}
        state: latest
      with_items:
        - python3-solv
        - python3-click
        - fedora-packager

    - name: pull bontron-preview container
      docker:
        name: boltron-preview
        image: modularitycontainers/boltron-preview
        state: present


- name: Compose build and validation
  hosts: vagrant_host
  user: vagrant
  become: yes
  become_method: sudo
  vars:
    container_name: "boltron_container"
  tasks:

    - name: copy boltron.cfg in /etc/mock
      command: cp /vagrant/data/boltron.cfg /etc/mock

    - name: build an image
      shell: /vagrant/data/build-image.sh "{{ compose }}"
      #abort play if the image can't be build for some reason
      when: '"https" in "{{ compose }}"'
      ignore_errors: false

    - name: pull a docker image
      command: docker pull "{{ compose }}"
      when: '"registry" in "{{ compose }}"'
      ignore_errors: false

    - name: rename docker image if pulled
      command: docker tag "{{ compose }}":latest boltron:latest
      when: '"registry" in "{{ compose }}"'

    - name: install python-docker-py to use docker_container
      package:
        name: python-docker-py
        state: latest

    - name: create a data container
      docker_container:
        name: "{{ container_name }}"
        image: boltron
        state: started
        volumes:
           - /vagrant/run-tests.sh:/run-tests.sh:z
        command: sleep infinity

    - include: tests/quick_mini_test.yaml
    - include: tests/modules_install.yaml
    - include: tests/modules_update.yaml
