node {
    deleteDir()
    stage('Build') {

        //sh '''curl -sb -H "Accept: application/json" "https://kojipkgs.fedoraproject.org/compose/latest-Fedora-Modular-26/STATUS" | grep FINISHED'''
        //def response = httpRequest 'https://kojipkgs.fedoraproject.org/compose/latest-Fedora-Modular-26/STATUS'
        //println("Content: "+response.content)
        //assert response.content == "FINISHED\n": "The Build status is not FINISHED, aborting."

    }

    stage('git clone Tests') {

        sh '''git clone "https://github.com/alexxa/compose_tester.git" && ls -la'''
    }

    stage('Setup Environment') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags env_setup'''
    }

    stage('Pull Image') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags pull_image'''
    }

    stage('Create Container') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags create_container'''
    }

    stage('Mini test') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags mini'''
    }

    stage('Module Install') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags modules_install'''
    }

    stage('Module Update') {
        sh '''cd /var/lib/jenkins/workspace/F27_james_image/compose_tester &&
        sudo ansible-playbook deploy.yaml --extra-vars "compose=jamesantill/boltron-27" --tags modules_update'''
    }
}
